{
  "name": "test_Hard_js",
  "type": "UPLINK",
  "debugMode": true,
  "configuration": {
    "scriptLang": "JS",
    "decoder": "// Decode an uplink message from a buffer\n// payload - array of bytes\n// metadata - key/value object\n\n/** Decoder **/\n\n// decode payload to string\nvar payloadStr = decodeToString(payload);\n\n// decode payload to JSON\nvar data = decodeToJson(payload);\n\n// Variable for whole telemetry\nvar telemetry = [];\n\n// CHANGES: message body was a JSON that wasn't parsed\nvar parsedDataBody = JSON.parse(data.message.body);\n\nvar keys = Object.keys(parsedDataBody);\nvar values = Object.keys(parsedDataBody).map(function(key) {\n    return parsedDataBody[key];\n});\n\n\nvar temp = data.message.created_time.split(\"T\");\nvar temp2 = temp[1].split(\".\");\nvar Aktualisiert = temp[0] + \" \" + temp2[0];\nvar parameter = parsedDataBody[0];\n\n// set necessary thingsboard attributes\nif(data.device.space_id == \"018c5d0d-b2f1-7057-8d14-ba8f4b57f921\"){\n    var deviceName = \"hsn-\" + data.device.serial_number + \"-dev\";\n}\n    else if(data.device.space_id == \"018d35eb-536d-7614-9fb3-8853ed290e38\"){\n        var deviceName = \"hsn-\" + data.device.serial_number + \"-prod\";\n    }\nvar deviceType = \"018c62b9-dca6-7092-bad2-faf27451aaf2\";\nvar customerName = 'Test';\nvar groupName = \"018c5d0d-b2f1-7057-8d14-ba8f4b57f921\";\n// use assetName and assetType instead of deviceName and deviceType\n// to automatically create assets instead of devices.\n// var assetName = 'Asset A';\n// var assetType = 'building';\nvar l = parsedDataBody.length;\n// Result object with device/asset attributes/telemetry data\nvar result = {\n// Use deviceName and deviceType or assetName and assetType, but not both.\n   deviceName: deviceName,\n   deviceType: deviceType,\n// assetName: assetName,\n// assetType: assetType,\n// customerName: customerName,\n   groupName: groupName,\n   attributes: {\n       serialNumber: data.device.serial_number,\n       integrationName: metadata['integrationName'],\n      // manufacturer: manufacturer\n      Aktualisiert: Aktualisiert,\n      watchdog_timeout: values[0],\n      vendor_name: values[1],\n      product_name: values[2],\n      hw_variant: values[3],\n      hw_revision: values[4],\n      fw_bundle: values[5],\n      fw_name: values[6],\n      fw_version: values[7],\n      ble_passkey: values[8],\n      modem_fw_version: values[11]\n   },\n   //telemetry: telemetry\n\n};\n\n/** Helper functions **/\n\nfunction decodeToString(payload) {\n   return String.fromCharCode.apply(String, payload);\n}\n\nfunction decodeToJson(payload) {\n   // covert payload to string.\n   var str = decodeToString(payload);\n\n   // parse string to JSON\n   var data = JSON.parse(str);\n   return data;\n}\n\nreturn result;",
    "tbelDecoder": "// Decode an uplink message from a buffer\n// payload - array of bytes\n// metadata - key/value object\n\n/** Decoder **/\n\n// decode payload to string\nvar payloadStr = decodeToString(payload);\n\n// decode payload to JSON\n// var data = decodeToJson(payload);\n\nvar deviceName = 'Device A';\nvar deviceType = 'thermostat';\nvar customerName = 'Customer C';\nvar groupName = 'thermostat devices';\nvar manufacturer = 'Example corporation';\n// use assetName and assetType instead of deviceName and deviceType\n// to automatically create assets instead of devices.\n// var assetName = 'Asset A';\n// var assetType = 'building';\n\n// Result object with device/asset attributes/telemetry data\nvar result = {\n// Use deviceName and deviceType or assetName and assetType, but not both.\n   deviceName: deviceName,\n   deviceType: deviceType,\n// assetName: assetName,\n// assetType: assetType,\n// customerName: customerName,\n   groupName: groupName,\n   attributes: {\n       model: 'Model A',\n       serialNumber: 'SN111',\n       integrationName: metadata['integrationName'],\n       manufacturer: manufacturer\n   },\n   telemetry: {\n       temperature: 42,\n       humidity: 80,\n       rawData: payloadStr\n   }\n};\n\n/** Helper functions 'decodeToString' and 'decodeToJson' are already built-in **/\n\nreturn result;",
    "encoder": null,
    "tbelEncoder": null,
    "updateOnlyKeys": [
      "Hardwario"
    ]
  },
  "additionalInfo": {
    "description": "ardwario CHESTER-U1"
  },
  "edgeTemplate": false
}